local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
    Name = "Rayfield Example Window",
    Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
    LoadingTitle = "Rayfield Interface Suite",
    LoadingSubtitle = "by Sirius",
    Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes
 
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface
 
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "roKu Hub"
    },
 
    Discord = {
       Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
       Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
 
    KeySystem = false, -- Set this to true to use our key system
    KeySettings = {
       Title = "Untitled",
       Subtitle = "Key System",
       Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
       FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"123"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
 })
 local Tab = Window:CreateTab("Main", 4483362458)
 local Section = Tab:CreateSection("Aimbot")
 local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local mouse = player:GetMouse()

local aimEnabled = false
local MAX_DISTANCE = 65 -- ระยะสูงสุด

local function getClosestTarget()
    local closestTarget = nil
    local shortestDistance = math.huge

    for _, target in ipairs(Players:GetPlayers()) do
        if target ~= player and target.Character and target.Character:FindFirstChild("Head") then
            local head = target.Character.Head
            local distance3D = (head.Position - workspace.CurrentCamera.CFrame.Position).Magnitude

            if distance3D <= MAX_DISTANCE then
                local screenPoint, onScreen = workspace.CurrentCamera:WorldToViewportPoint(head.Position)
                if onScreen then
                    local mousePos = Vector2.new(mouse.X, mouse.Y)
                    local dist2D = (mousePos - Vector2.new(screenPoint.X, screenPoint.Y)).Magnitude

                    if dist2D < shortestDistance then
                        shortestDistance = dist2D
                        closestTarget = target
                    end
                end
            end
        end
    end

    return closestTarget
end

RunService.RenderStepped:Connect(function()
    if aimEnabled then
        local target = getClosestTarget()
        if target and target.Character and target.Character:FindFirstChild("Head") then
            local cam = workspace.CurrentCamera
            local targetPos = target.Character.Head.Position
            local lookAt = CFrame.new(cam.CFrame.Position, targetPos)
            cam.CFrame = cam.CFrame:Lerp(lookAt, 0.38)
        end
    end
end)

local Toggle = Tab:CreateToggle({
   Name = "Aimbot เลงหัว",
   CurrentValue = false,
   Flag = "AimbotHeadToggle",
   Callback = function(Value)
      aimEnabled = Value
   end,
})
